<?xml version="1.0" encoding="UTF-8"?>

<!-- 
 ! Filename: struts.xml
 !
 ! Author:   Greg Crider
 ! Date:     6 November 2008
 !
 ! Purpose:  This context file contains beans related to Struts2 actions.
 !
 ! Notes:
 !           1) Make sure all actions are defined with scope prototype and not singleton.
 !           2) Make sure all action collaborators are scoped properly.
 !           3) Make sure all domain model beans used as dependencies within an action
 !              are scoped as prototype and not singleton.
  -->
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:lang="http://www.springframework.org/schema/lang"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
                           http://www.springframework.org/schema/lang http://www.springframework.org/schema/lang/spring-lang-2.0.xsd">

	<!--
	 !   Struts Interceptors 
	  -->
	  
	<bean id="struts.interceptor.Exception" class="org.ccci.gcx.idm.web.admin.interceptor.impl.ExceptionMappingInterceptor" scope="prototype"/>

	<!--
	 ! Domain Model objects to be injected into actions. Use session scope where appropriate so that
	 ! the domain model object follows the user's HTTP session.
	  -->

	<bean id="struts.model.GcxUser" class="org.ccci.gcx.idm.core.model.impl.GcxUser" scope="session"/>

	<!--
	 ! Actions 
	  -->

	<bean id="struts.action.abstractUser" class="org.ccci.gcx.idm.web.admin.action.AbstractUserAction" abstract="true">
		<property name="applicationSource"><value>${audit.applicationsource}</value></property>
		<property name="serviceGroup">
			<map>
				<entry key="service.gcxUserService" value-ref="service.gcxUserService"/>
			</map>
		</property>
	</bean>

	<bean id="struts.action.Login" class="org.ccci.gcx.idm.web.admin.action.login.LoginAction" parent="struts.action.abstractUser" scope="prototype">
		<property name="modelObject" ref="struts.model.GcxUser"/>
	</bean>

	<bean id="struts.action.abstractUserSearch" class="org.ccci.gcx.idm.web.admin.action.AbstractUserSearchAction" parent="struts.action.abstractUser" abstract="true">
		<property name="entriesPerPage" value="5"/>
	</bean>

	<bean id="struts.action.EdirUserSearch" class="org.ccci.gcx.idm.web.admin.action.edir.EdirUserSearchAction" parent="struts.action.abstractUserSearch" scope="prototype">
		<property name="searchControlParametersName" value="${webadmin.spcname.usersearch}"/>
		<property name="searchActionName" value="edirUserSearch"/>
		<property name="userSearchResponseClass" value="org.ccci.gcx.idm.web.admin.response.impl.UserSearchResponse"/>
	</bean>

	<bean id="struts.action.EdirMergeSearch" class="org.ccci.gcx.idm.web.admin.action.edir.EdirMergeSearchAction" parent="struts.action.abstractUserSearch" scope="prototype">
		<property name="searchControlParametersName" value="${webadmin.spcname.mergesearch}"/>
		<property name="searchActionName" value="edirMergeSearch"/>
		<property name="userSearchResponseClass" value="org.ccci.gcx.idm.web.admin.response.impl.FilteredUserSearchResponse"/>
	</bean>

	<bean id="struts.action.EdirUserUpdate" class="org.ccci.gcx.idm.web.admin.action.edir.EdirUserUpdateAction" parent="struts.action.abstractUser" scope="prototype">
	</bean>

	<bean id="struts.action.EdirMergeUpdate" class="org.ccci.gcx.idm.web.admin.action.edir.EdirMergeUpdateAction" parent="struts.action.abstractUser" scope="prototype">
		<property name="userSearchControlParametersName" value="${webadmin.spcname.usersearch}"/>
	</bean>

</beans>
