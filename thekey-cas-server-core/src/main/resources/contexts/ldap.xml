<?xml version="1.0" encoding="UTF-8"?>

<!-- 
 ! Filename: ldap.xml
 !
 ! Author:   Greg Crider
 ! Date:     21 October 2008
 !
 ! Purpose:  This context file contains beans used for ldap related operations.
  -->
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:lang="http://www.springframework.org/schema/lang"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
                           http://www.springframework.org/schema/lang http://www.springframework.org/schema/lang/spring-lang-2.0.xsd">
	
	<!-- Context source for establishing connection to the LDAP server -->
	<!-- 
	 ! NOTE: We cannot use the Spring-LDAP pooling mechanism because it doesn't support the necessary RequestControls
	 !       that are used for sort and paging.
	  -->
	<bean id="ldap.contextSource" class="org.springframework.ldap.core.support.LdapContextSource">
		<property name="url"><value>${ldap.url}</value></property>
		<property name="base"><value>${ldap.base}</value></property>
		<property name="userDn"><value>${ldap.userdn}</value></property>
		<property name="password"><value>${ldap.password}</value></property>
		<!-- This pooling option must be false when using Spring-LDAP pooling -->
		<property name="baseEnvironmentProperties">
			<map>
				<entry key="java.naming.ldap.factory.socket"><value>${ldap.factory.socket}</value></entry>
			</map>
		</property>
	</bean>
	
	<!-- Used to make sure that the context source is using the existing transaction; this class is
	     supposed to compensate for rollbacks by performing operations in reverse to undo what was
	     done in the LDAP tree before the error -->
	<bean id="ldap.proxy.contextSource" class="org.springframework.ldap.transaction.compensating.manager.TransactionAwareContextSourceProxy">
		<constructor-arg ref="ldap.contextSource" />
	</bean>
		
	<!-- Template for performing DAO execution -->
	<bean id="ldap.template" class="org.springframework.ldap.core.LdapTemplate">
		<constructor-arg ref="ldap.proxy.contextSource" />
	</bean>

	<!-- Template for operations that should take place outside of a transaction -->
	<bean id="ldap.template.notx" class="org.springframework.ldap.core.LdapTemplate">
		<constructor-arg ref="ldap.contextSource" />
	</bean>
	
	<!-- LDAP Binders -->
	
	<bean id="ldap.bind.gcxUser" class="org.ccci.gcx.idm.core.persist.ldap.bind.impl.GcxUserAttributeBind"/>
	
	<!-- DAO Implementations -->
	
	<bean id="ldap.abstractDao" class="org.ccci.gcx.idm.core.persist.ldap.AbstractLdapCrudDao" abstract="true">
		<property name="maxSearchResults"><value>${ldap.maxresults}</value></property>
	</bean>
	
	<bean id="ldap.gcxUserDao"	class="org.ccci.gcx.idm.core.persist.ldap.GcxUserDaoImpl" parent="ldap.abstractDao">
		<property name="ldapTemplate" ref="ldap.template"/>
		<property name="attributeBind" ref="ldap.bind.gcxUser"/>
		<property name="modelDN"><value>${ldap.dn.gcxuser}</value></property>
		<property name="modelDNSubstitutionProperties">
			<list>
				<value>email</value>
			</list>
		</property>
	</bean>
	
</beans>
